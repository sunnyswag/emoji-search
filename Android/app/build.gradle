plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
String apiKey = properties['api.key']

android {
    namespace 'com.example.emojisemanticsearch'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.emojisemanticsearch"
        minSdk 29
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        buildConfigField 'String', 'API_KEY', "\"${apiKey}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation(project(":core:model"))
    implementation(project(":core:emoji-data-reader"))

    implementation(libs.coreKtx)
    implementation(libs.lifecycleRuntimeKtx)
    implementation(libs.activityCompose)
    implementation(platform(libs.composeBom))
    implementation(libs.composeUi)
    implementation(libs.material3)
    implementation(libs.composeUiGraphics)
    implementation(libs.composeUiToolingPreview)
    implementation(libs.startupRuntime)
    implementation(libs.lifecycleViewmodelCompose)
    implementation(libs.lifecycleRuntimeCompose)

    implementation(libs.accompanistSystemuiController)
    implementation(libs.gson)

    implementation(libs.coroutinesCore)
    implementation(libs.coroutinesAndroid)
    implementation(libs.multikCore)
    implementation(libs.multikKotlin)

    implementation(libs.okhttp)
    implementation(libs.retrofit)
    implementation(libs.converterGson)

    implementation(libs.koinAndroid)

    testImplementation(libs.junit)
    androidTestImplementation(libs.androidxTestJunit)
}